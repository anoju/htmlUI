const scrollSelector=class{constructor(options){let defaults={el:"",loop:false,outside:2,sensitivity:2,option:[],value:null,onChange:null};this.options=Object.assign({},defaults,options);Object.assign(this,this.options);this.a=this.options.sensitivity*10;this.minV=Math.sqrt(1/this.a);this.selected=this.option[0];this.exceedA=10;this.moveT=0;this.moving=false;const setEl=typeof this.options.el==="string"?document.querySelector(this.options.el):this.options.el;if(!setEl)return console.error("scrollSelector - Invalid Element");this.elems={el:setEl,circleList:null,circleItems:null,highlight:null,highlightList:null,highListItems:null};this.events={touchstart:null,touchmove:null,touchend:null};this.itemHeight=this.elems.el.offsetHeight/(this.options.outside*2+1);this.scroll=0;this._init()}_init(){this._create(this.options.option);let touchData={startY:0,yArr:[]};for(let eventName in this.events){this.events[eventName]=(eventName=>{return e=>{if(this.elems.el.contains(e.target)||e.target===this.elems.el){e.preventDefault();if(this.option.length){this["_"+eventName](e,touchData)}}}})(eventName)}this.elems.el.addEventListener("touchstart",this.events.touchstart,{passive:false});document.addEventListener("mousedown",this.events.touchstart,{passive:false});this.elems.el.addEventListener("touchend",this.events.touchend,{passive:false});document.addEventListener("mouseup",this.events.touchend,{passive:false});if(this.option.length){this.value=this.value!==null?this.value:this.option[0].value;this.select(this.value)}}_touchstart(e,touchData){this.elems.el.addEventListener("touchmove",this.events.touchmove,{passive:false});document.addEventListener("mousemove",this.events.touchmove,{passive:false});let eventY=e.clientY||e.touches[0].clientY;touchData.startY=eventY;touchData.yArr=[[eventY,(new Date).getTime()]];touchData.touchScroll=this.scroll;this._stop()}_touchmove(e,touchData){let eventY=e.clientY||e.touches[0].clientY;touchData.yArr.push([eventY,(new Date).getTime()]);if(touchData.length>5){touchData.unshift()}let scrollAdd=(touchData.startY-eventY)/this.itemHeight;let moveToScroll=scrollAdd+this.scroll;if(!this.loop){if(moveToScroll<0){moveToScroll*=.3}else if(moveToScroll>this.option.length){moveToScroll=this.option.length+(moveToScroll-this.option.length)*.3}}else{moveToScroll=this._normalizeScroll(moveToScroll)}touchData.touchScroll=this._moveTo(moveToScroll)}_touchend(e,touchData){this.elems.el.removeEventListener("touchmove",this.events.touchmove);document.removeEventListener("mousemove",this.events.touchmove);let v;if(touchData.yArr.length===1){v=0}else{let startTime=touchData.yArr[touchData.yArr.length-2][1];let endTime=touchData.yArr[touchData.yArr.length-1][1];let startY=touchData.yArr[touchData.yArr.length-2][0];let endY=touchData.yArr[touchData.yArr.length-1][0];v=(startY-endY)/this.itemHeight*1e3/(endTime-startTime);let sign=v>0?1:-1;v=Math.abs(v)>30?30*sign:v}this.scroll=touchData.touchScroll;this._animateMoveByInitV(v)}_easing={easeOutCubic:function(pos){return Math.pow(pos-1,3)+1},easeOutQuart:function(pos){return-(Math.pow(pos-1,4)-1)}};_create(option){if(!option.length){return}const clipPath=`polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% ${this.itemHeight*(this.options.outside+1)}px, 100% ${this.itemHeight*(this.options.outside+1)}px, 100% ${this.itemHeight*this.options.outside}px, 0% ${this.itemHeight*this.options.outside}px, 0% 0%)`;let template=`<div class="select-options" style="-webkit-clip-path:${clipPath};clip-path:${clipPath};"><ul class="select-options-list" role="listbox" style="padding: ${this.itemHeight*this.options.outside}px 0;">{{circleListHTML}}</ul></div><div class="select-highlight"><ul class="select-highlight-list">{{highListHTML}}</ul></div>`;this.option=option;let optionLength=option.length;let circleListHTML="";for(let i=0;i<option.length;i++){circleListHTML+=`<li class="select-option" role="option" data-index="${i}">${option[i].text}</li>`}let highListHTML="";for(let i=0;i<option.length;i++){highListHTML+=`<li class="select-highlight-item">${option[i].text}</li>`}if(this.options.loop){for(let i=0;i<this.outside;i++){circleListHTML=`<li class="select-option" role="option" data-index="${-i-1}">${option[optionLength-i-1].text}</li>`+circleListHTML;circleListHTML+=`<li class="select-option" role="option" data-index="${i+optionLength}">${option[i].text}</li>`;highListHTML=`<li class="select-highlight-item">${option[optionLength-i-1].text}</li>`+highListHTML;highListHTML+=`<li class="select-highlight-item">${option[i].text}</li>`}}this.elems.el.classList.add("scroll-selector");const elWrap=this.elems.el.closest(".scroll-selector-wrap");const setWrapCss=`--scroll-selector-item-height:${this.itemHeight}px;--scroll-selector-outside:${this.options.outside};`;if(elWrap)elWrap.style.cssText=setWrapCss;else this.elems.el.style.cssText=setWrapCss;this.elems.el.innerHTML=template.replace("{{circleListHTML}}",circleListHTML).replace("{{highListHTML}}",highListHTML);this.elems.circleList=this.elems.el.querySelector(".select-options-list");this.elems.circleItems=this.elems.el.querySelectorAll(".select-option");this.elems.highlight=this.elems.el.querySelector(".select-highlight");this.elems.highlightList=this.elems.el.querySelector(".select-highlight-list");this.elems.highlightitems=this.elems.el.querySelectorAll(".select-highlight-item");if(this.loop){this.elems.highlightList.style.top=-this.itemHeight+"px"}}_normalizeScroll(scroll){let normalizedScroll=scroll;while(normalizedScroll<0){normalizedScroll+=this.option.length}normalizedScroll=normalizedScroll%this.option.length;return normalizedScroll}_cubicBezier(t){const p0=0;const p1=0;const p2=1;const p3=1;const t2=t*t;const t3=t2*t;const mt=1-t;const mt2=mt*mt;const mt3=mt2*mt;const x=p0*mt3+3*p1*mt2*t+3*p2*mt*t2+p3*t3;return x}_moveTo(scroll){let move=-scroll*this.itemHeight;if(this.loop){scroll=this._normalizeScroll(scroll);move=-(scroll+this.outside)*this.itemHeight}this.elems.circleList.style.transform=`translate3d(0, ${move}px, 0)`;this.elems.highlightList.style.transform=`translate3d(0, ${move}px, 0)`;[...this.elems.circleItems].forEach(itemElem=>{const idx=Math.abs(itemElem.dataset.index);if(scroll-this.outside-1<idx&&idx<scroll+this.outside+1){itemElem.style.removeProperty("visibility");const sclIdxVal=this._cubicBezier(Math.abs(scroll-idx)/(this.outside+1));let deg=30*sclIdxVal;if(idx>scroll)deg="-"+deg;const scale=1-sclIdxVal/20;itemElem.style.transform=`rotateX(${deg}deg) scale(${scale})`}else{itemElem.style.visibility="hidden";itemElem.style.removeProperty("transform")}if(idx===scroll){itemElem.classList.add("active");itemElem.ariaSelected=true}else{itemElem.classList.remove("active");itemElem.ariaSelected=false}});return scroll}async _animateMoveByInitV(initV){let initScroll;let finalScroll;let finalV;let totalScrollLen;let a;let t;if(!this.loop){if(this.scroll<0||this.scroll>this.option.length-1){a=this.exceedA;initScroll=this.scroll;finalScroll=this.scroll<0?0:this.option.length-1;totalScrollLen=initScroll-finalScroll;t=Math.sqrt(Math.abs(totalScrollLen/a));initV=a*t;initV=this.scroll>0?-initV:initV;finalV=0;await this._animateToScroll(initScroll,finalScroll,t)}else{initScroll=this.scroll;a=initV>0?-this.a:this.a;t=Math.abs(initV/a);totalScrollLen=initV*t+a*t*t/2;finalScroll=Math.round(this.scroll+totalScrollLen);finalScroll=finalScroll<0?0:finalScroll>this.option.length-1?this.option.length-1:finalScroll;totalScrollLen=finalScroll-initScroll;t=Math.sqrt(Math.abs(totalScrollLen/a));await this._animateToScroll(this.scroll,finalScroll,t,"easeOutQuart")}}else{initScroll=this.scroll;a=initV>0?-this.a:this.a;t=Math.abs(initV/a);totalScrollLen=initV*t+a*t*t/2;finalScroll=Math.round(this.scroll+totalScrollLen);await this._animateToScroll(this.scroll,finalScroll,t,"easeOutQuart")}this._selectByScroll(this.scroll)}_animateToScroll(initScroll,finalScroll,t,easingName="easeOutQuart"){if(initScroll===finalScroll||t===0){this._moveTo(initScroll);return}let start=(new Date).getTime()/1e3;let pass=0;let totalScrollLen=finalScroll-initScroll;return new Promise((resolve,reject)=>{this.moving=true;let tick=()=>{pass=(new Date).getTime()/1e3-start;if(pass<t){this.scroll=this._moveTo(initScroll+this._easing[easingName](pass/t)*totalScrollLen);this.moveT=requestAnimationFrame(tick)}else{resolve();this._stop();this.scroll=this._moveTo(initScroll+totalScrollLen)}};tick()})}_stop(){this.moving=false;cancelAnimationFrame(this.moveT)}_selectByScroll(scroll){scroll=this._normalizeScroll(scroll)|0;if(scroll>this.option.length-1){scroll=this.option.length-1;this._moveTo(scroll)}this._moveTo(scroll);this.scroll=scroll;this.selected=this.option[scroll];this.value=this.selected.value;this.onChange&&this.onChange(this.selected)}updateOption(option){this._create(option);if(!this.moving){this._selectByScroll(this.scroll)}}select(value){for(let i=0;i<this.option.length;i++){if(this.option[i].value===value){window.cancelAnimationFrame(this.moveT);let initScroll=this._normalizeScroll(this.scroll);let finalScroll=i;let t=Math.sqrt(Math.abs((finalScroll-initScroll)/this.a));this._animateToScroll(initScroll,finalScroll,t);setTimeout(()=>this._selectByScroll(i));return}}throw new Error(`can not select value: ${value}, ${value} match nothing in current option`)}destroy(){this._stop();for(let eventName in this.events){this.elems.el.removeEventListener("eventName",this.events[eventName])}document.removeEventListener("mousedown",this.events["touchstart"]);document.removeEventListener("mousemove",this.events["touchmove"]);document.removeEventListener("mouseup",this.events["touchend"]);this.elems.el.classList.remove("scroll-selector");const elWrap=this.elems.el.closest(".scroll-selector-wrap");if(elWrap&&!elWrap.querySelector(".scroll-selector")){elWrap.style.removeProperty("--scroll-selector-item-height");elWrap.style.removeProperty("--scroll-selector-outside")}else{this.elems.el.style.removeProperty("--scroll-selector-item-height");this.elems.el.style.removeProperty("--scroll-selector-outside")}this.elems.el.innerHTML="";this.elems=null}};